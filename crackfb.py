# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Tue Aug 16 13:50:03 2022
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b''))